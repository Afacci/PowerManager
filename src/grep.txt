abortExecution.f90:!>\file abortExecution.f90
abortExecution.f90:subroutine abortExecution(i,j,line,word,r1,r2,iVec)
abortExecution.f90:end subroutine abortExecution
abortExecution.f90~:!>\file abortExecution.f90
abortExecution.f90~:subroutine abortExecution(i,j,line,word,r1,r2,iVec)
abortExecution.f90~:end subroutine abortExecution
buildPlant.f90:      if(trigPriority(j).gt.nTrig) call abortExecution(21,j)
buildPlant.f90:      if(BoiPriority(j).gt.nBoi) call abortExecution(22,j)
buildPlant.f90:      if(ChiPriority(j).gt.nChi) call abortExecution(23,j)
buildPlant.f90~:      if(trigPriority(j).gt.nTrig) call abortExecution(21,j)
buildPlant.f90~:      if(BoiPriority(j).gt.nBoi) call abortExecution(22,j)
buildPlant.f90~:      if(ChiPriority(j).gt.nChi) call abortExecution(23,j)
checkPlant.f90:if(uTmax.gt.pTh) call abortExecution(i=7,j=1,r1=pTh, r2=uTmax )
checkPlant.f90:if(uCmax.gt.pCh) call abortExecution(i=7,j=2,r1=pCh, r2=uCmax)
checkPlant.f90:if(uEmax.gt.pEl.and.gridConnection.eq.'StandAlone') call abortExecution(i=7,j=2,r1=pEl, r2=uEmax)
checkPlant.f90:   if(upTime0(i).eq.0.and.startPoint(i).gt.zero) call abortExecution(15,i,word='upTime',r1=upTime0(i),r2=startPoint(i))
checkPlant.f90:   if(upTime0(i).gt.0.and.startPoint(i).eq.zero) call abortExecution(15,i,word='upTime',r1=upTime0(i),r2=startPoint(i))
checkPlant.f90:   if(downTime0(i).eq.0.and.startPoint(i).eq.zero) call abortExecution(15,i,word='DownTime',r1=downTime0(i),r2=startPoint(i))
checkPlant.f90:   if(downTime0(i).gt.0.and.startPoint(i).gt.zero) call abortExecution(15,i,word='DownTime',r1=downTime0(i),r2=startPoint(i))
checkPlant.f90~:if(uTmax.gt.pTh) call abortExecution(i=7,j=1,r1=pTh, r2=uTmax )
checkPlant.f90~:if(uCmax.gt.pCh) call abortExecution(i=7,j=2,r1=pCh, r2=uCmax)
checkPlant.f90~:if(uEmax.gt.pEl.and.gridConnection.eq.'StandAlone') call abortExecution(i=7,j=2,r1=pEl, r2=uEmax)
checkPlant.f90~:   if(upTime0(i).eq.0.and.startPoint(i).gt.zero) call abortExecution(15,i,word='upTime',r1=upTime0(i),r2=startPoint(i))
checkPlant.f90~:   if(upTime0(i).gt.0.and.startPoint(i).eq.zero) call abortExecution(15,i,word='upTime',r1=upTime0(i),r2=startPoint(i))
checkPlant.f90~:   if(downTime0(i).eq.0.and.startPoint(i).eq.zero) call abortExecution(15,i,word='DownTime',r1=downTime0(i),r2=startPoint(i))
checkPlant.f90~:   if(downTime0(i).gt.0.and.startPoint(i).gt.zero) call abortExecution(15,i,word='DownTime',r1=downTime0(i),r2=startPoint(i))
graphTools.f90:      if(nt(i).eq.0) call abortExecution(18,i)
graphTools.f90:      call abortExecution(14)
graphTools.f90:      if(p.eq.-1) call abortExecution(29,t, iVec=upTime(t-1,:))
graphTools.f90~:      if(nt(i).eq.0) call abortExecution(18,i)
graphTools.f90~:      call abortExecution(14)
interfaces.f90:    subroutine abortExecution(i,j,line,word,r1,r2, iVec)
interfaces.f90:    end subroutine abortExecution
Makefile:../obj/abortExecution.o \
Makefile~:../obj/abortExecution.o \
Makefile.bak:../obj/abortExecution.o \
Binary file PowerManager matches
readBoiler.f90:   call abortExecution(1,3)
readBoiler.f90:if(.not.isPresent(1)) call abortExecution(5,1)
readBoiler.f90:    if (error.eq.1) call abortExecution(0,3)
readBoiler.f90:    if(.not.isPresent(i)) call abortExecution(5,i)
readBoiler.f90~:   call abortExecution(1,3)
readBoiler.f90~:if(.not.isPresent(1)) call abortExecution(5,1)
readBoiler.f90~:    if (error.eq.1) call abortExecution(0,3)
readBoiler.f90~:    if(.not.isPresent(i)) call abortExecution(5,i)
readChiller.f90:   call abortExecution(1,4)
readChiller.f90:if(.not.isPresent(1)) call abortExecution(6,1)
readChiller.f90:if(.not.isPresent(2)) call abortExecution(6,2)
readChiller.f90:    if(error.eq.1) call abortExecution(0,4)
readChiller.f90:    if(.not.isPresent(i)) call abortExecution(6,i)
readChiller.f90~:   call abortExecution(1,4)
readChiller.f90~:if(.not.isPresent(1)) call abortExecution(6,1)
readChiller.f90~:if(.not.isPresent(2)) call abortExecution(6,2)
readChiller.f90~:    if(error.eq.1) call abortExecution(0,4)
readChiller.f90~:    if(.not.isPresent(i)) call abortExecution(6,i)
readEnv.f90:if(.not.filePresent) call abortExecution(1,7)
readEnv.f90:    if (error.eq.1) call abortExecution(0,6,line)
readEnv.f90:          if(n.ne.nTime) call abortExecution(17)
readEnv.f90:           if(iTime.ne.1) call abortExecution(8)
readEnv.f90:      if(.not.simpleModel) call abortExecution(30,1)
readEnv.f90:         if(.not.ljModel(i)) call abortExecution(31,i)
readGeneral.f90:   call abortExecution(1,1)
readGeneral.f90:    if (error.eq.1)  call abortExecution(0,1,line)
readGeneral.f90:              call abortExecution(2,1,line,gridConnection)
readGeneral.f90:          if(n_.ne.n) call abortExecution(13,n_,n,'StartPoint')
readGeneral.f90:          if(n_.ne.n) call abortExecution(13,n_,n,'UpTime')
readGeneral.f90:          if(n_.ne.n) call abortExecution(13,n_,n,'DownTime')
readGeneral.f90:                call abortExecution(2,2,line,method)
readGeneral.f90:             if(dummy.ne.'.true.'.and.dummy.ne.'.false.') call abortExecution(2,3, line=line,word=val)
readGeneral.f90:             if(dummy.ne.'.true.'.and.dummy.ne.'.false.') call abortExecution(2,3, line=line,word=val)
readGeneral.f90:             if(dummy.ne.'.true.'.and.dummy.ne.'.false.') call abortExecution(2,3, line=line,word=val)
readGeneral.f90:             if(dummy.ne.'.true.'.and.dummy.ne.'.false.') call abortExecution(2,3, line=line,word=val)
readGeneral.f90:             if(dummy.ne.'.true.'.and.dummy.ne.'.false.') call abortExecution(2,3, line=line,word=val)
readGeneral.f90:             if(dummy.ne.'.true.'.and.dummy.ne.'.false.') call abortExecution(2,3, line=line,word=val)
readGeneral.f90:             if(dummy.ne.'.true.'.and.dummy.ne.'.false.') call abortExecution(2,3, line=line,word=val)
readGeneral.f90:             if(dummy.ne.'.true.'.and.dummy.ne.'.false.') call abortExecution(2,3, line=line,word=val)
readGeneral.f90:             if(dummy.ne.'.true.'.and.dummy.ne.'.false.') call abortExecution(2,3, line=line,word=val)
readGeneral.f90:             if(dummy.ne.'.true.'.and.dummy.ne.'.false.') call abortExecution(2,3, line=line,word=val)
readGeneral.f90:             if(dummy.ne.'.true.'.and.dummy.ne.'.false.') call abortExecution(2,3, line=line,word=val)
readGeneral.f90:             if(dummy.ne.'.true.'.and.dummy.ne.'.false.') call abortExecution(2,3, line=line,word=val)
readGeneral.f90:             if(dummy.ne.'.true.'.and.dummy.ne.'.false.') call abortExecution(2,3, line=line,word=val)
readGeneral.f90:             if(dummy.ne.'.true.'.and.dummy.ne.'.false.') call abortExecution(2,3, line=line,word=val)
readGeneral.f90:             if(dummy.ne.'.true.'.and.dummy.ne.'.false.') call abortExecution(2,3, line=line,word=val)
readGeneral.f90:    if(.not.isPresent(i)) call abortExecution(3,i)
readGeneral.f90:   if(.not.kGSE(i)) call abortExecution(19,i)
readGeneral.f90:      if(.not.iPrio(i)) call abortExecution(20,i)
readGeneral.f90:  if(.not.kPEC(1)) call abortExecution(25)
readGeneral.f90:     if(.not.kPEC(i)) call abortExecution(26,i)
readGeneral.f90:     if(.not.kPEC(i)) call abortExecution(27,i-2)
readGeneral.f90~:   call abortExecution(1,1)
readGeneral.f90~:    if (error.eq.1)  call abortExecution(0,1,line)
readGeneral.f90~:              call abortExecution(2,1,line,gridConnection)
readGeneral.f90~:          if(n_.ne.n) call abortExecution(13,n_,n,'StartPoint')
readGeneral.f90~:          if(n_.ne.n) call abortExecution(13,n_,n,'UpTime')
readGeneral.f90~:          if(n_.ne.n) call abortExecution(13,n_,n,'DownTime')
readGeneral.f90~:                call abortExecution(2,2,line,method)
readGeneral.f90~:             if(dummy.ne.'.true.'.and.dummy.ne.'.false.') call abortExecution(2,3, line=line,word=val)
readGeneral.f90~:             if(dummy.ne.'.true.'.and.dummy.ne.'.false.') call abortExecution(2,3, line=line,word=val)
readGeneral.f90~:             if(dummy.ne.'.true.'.and.dummy.ne.'.false.') call abortExecution(2,3, line=line,word=val)
readGeneral.f90~:             if(dummy.ne.'.true.'.and.dummy.ne.'.false.') call abortExecution(2,3, line=line,word=val)
readGeneral.f90~:             if(dummy.ne.'.true.'.and.dummy.ne.'.false.') call abortExecution(2,3, line=line,word=val)
readGeneral.f90~:             if(dummy.ne.'.true.'.and.dummy.ne.'.false.') call abortExecution(2,3, line=line,word=val)
readGeneral.f90~:             if(dummy.ne.'.true.'.and.dummy.ne.'.false.') call abortExecution(2,3, line=line,word=val)
readGeneral.f90~:             if(dummy.ne.'.true.'.and.dummy.ne.'.false.') call abortExecution(2,3, line=line,word=val)
readGeneral.f90~:             if(dummy.ne.'.true.'.and.dummy.ne.'.false.') call abortExecution(2,3, line=line,word=val)
readGeneral.f90~:             if(dummy.ne.'.true.'.and.dummy.ne.'.false.') call abortExecution(2,3, line=line,word=val)
readGeneral.f90~:             if(dummy.ne.'.true.'.and.dummy.ne.'.false.') call abortExecution(2,3, line=line,word=val)
readGeneral.f90~:             if(dummy.ne.'.true.'.and.dummy.ne.'.false.') call abortExecution(2,3, line=line,word=val)
readGeneral.f90~:             if(dummy.ne.'.true.'.and.dummy.ne.'.false.') call abortExecution(2,3, line=line,word=val)
readGeneral.f90~:             if(dummy.ne.'.true.'.and.dummy.ne.'.false.') call abortExecution(2,3, line=line,word=val)
readGeneral.f90~:             if(dummy.ne.'.true.'.and.dummy.ne.'.false.') call abortExecution(2,3, line=line,word=val)
readGeneral.f90~:    if(.not.isPresent(i)) call abortExecution(3,i)
readGeneral.f90~:   if(.not.kGSE(i)) call abortExecution(19,i)
readGeneral.f90~:      if(.not.iPrio(i)) call abortExecution(20,i)
readGeneral.f90~:  if(.not.kPEC(1)) call abortExecution(25)
readGeneral.f90~:     if(.not.kPEC(i)) call abortExecution(26,i)
readGeneral.f90~:     if(.not.kPEC(i)) call abortExecution(27,i-2)
readLoad.f90:if(.not.filePresent) call abortExecution(1,5)
readLoad.f90:           if(iTime.ne.1) call abortExecution(8)
readLoad.f90:      if(ntest.ne.nld(j)) call abortExecution(9,j,r1=time(i))
readLoad.f90:if(nPrice.ne.nLoad) call abortExecution(10)
readLoad.f90:           if(i.ne.1) call abortExecution(8)
readLoad.f90:if(nlp(iElp).ne.nld(iEl)) call abortExecution(11,1)
readLoad.f90:if(nlp(iThp).ne.nld(iTh)) call abortExecution(11,2)
readLoad.f90:if(nlp(iChp).ne.nld(iCh)) call abortExecution(11,3)
readLoad.f90:      if(ntest.ne.nld(j)) call abortExecution(12,j,r1=time(i))
readLoad.f90:           if(i.ne.1) call abortExecution(8)
readPV.f90:   call abortExecution(1,7)
readPV.f90:if(.not.isPresent(6)) call abortExecution(7,6)
readPV.f90:    if (error.eq.1) call abortExecution(0,3)
readPV.f90:    if(.not.isPresent(i)) call abortExecution(32,i)
readSC.f90:   call abortExecution(1,8)
readSC.f90:if(.not.isPresent(6)) call abortExecution(7,6)
readSC.f90:    if (error.eq.1) call abortExecution(0,3)
readSC.f90:    if(.not.isPresent(i)) call abortExecution(33,i)
readSteamPlant.f90:   call abortExecution(1,2)
readSteamPlant.f90:if(.not.isPresent(1)) call abortExecution(3,5)
readSteamPlant.f90:    if(error.eq.1) call abortExecution(0,2,nl)
readSteamPlant.f90:    if(.not.isPresent(i)) call abortExecution(4,i)
readThStorage.f90:   call abortExecution(1,3)
readThStorage.f90:    if (error.eq.1) call abortExecution(0,7)
readThStorage.f90:    if(.not.isPresent(i)) call abortExecution(28,i)
readTrigen.f90:   call abortExecution(1,2)
readTrigen.f90:if(.not.isPresent(1)) call abortExecution(3,5)
readTrigen.f90:    if(error.eq.1) call abortExecution(0,2,nl)
readTrigen.f90:    if(.not.isPresent(i)) call abortExecution(4,i)
readTrigen.f90~:   call abortExecution(1,2)
readTrigen.f90~:if(.not.isPresent(1)) call abortExecution(3,5)
readTrigen.f90~:    if(error.eq.1) call abortExecution(0,2,nl)
readTrigen.f90~:    if(.not.isPresent(i)) call abortExecution(4,i)
strategies.f90:         call abortExecution(14)
strategies.f90:         call abortExecution(14)
strategies.f90~:         call abortExecution(14)
strategies.f90~:         call abortExecution(14)
